{
    "version": "2.0.0",
    "tasks": [
        {
            //This task starts the qemu emulator with the compiled rust_os binary
            //TODO "Debug" is not a accurate description of what this task does
            // Something like "Run os on qemu" is more accurate
            "label": "Debug riscv_rust_os",
            "type": "shell",
            "command": "qemu-system-riscv64",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "args": [
                "-nographic",   //disable graphical output and redirect serial I/Os to console
                "-machine",     //select emulated machine
                "virt",         //select the VirtIO Board as emulated machine
                "-smp",         //set the number of initial cpus
                "1",            //number of initial cpus will be 1
                "-bios",        //set filename for the bios
                "none",         //bios filename set to none
                "-kernel",      //select kernel image to be loaded
                "./target/riscv64gc-unknown-none-elf/debug/riscv_rust_os.bin", //select rust_os binary as kernel image
                "-s",           //shorthand for -gdb tcp::1234  
                "-S"            //freeze CPU at startup (use 'c' to start execution)
            ],
            "dependsOn": [      //List of Tasks this task depends on
                "Build riscv_rust_os"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": [
                {
                    "pattern": [
                        {
                            "regexp": ".",
                            "file": 1,
                            "line": 1,
                            "column": 1,
                            "message": 1
                        }
                    ]
                }
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "label": "Build riscv_rust_os",
            "type": "shell",
            "command": "cargo",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "args": [
                "objcopy",          //Set Toolchain, in this case cargo will act as a proxy for the llvm-objcopy tool
                "--bin",            //Specify binary to be build 
                "riscv_rust_os",    //Only this binary will be build
                "--",               //Following arguments are proxied to the objcopy tool
                "-O",               //Set Output-Target
                "binary",           //Output will be in binary format
                "./target/riscv64gc-unknown-none-elf/debug/riscv_rust_os.bin" //Path of output file
            ]
        },
        {
            "label": "Build user_1",
            "type": "shell",
            "command": "cargo",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "args": [
                "objcopy",
                "--bin",
                "user_1", 
                "--",
                "-O",
                "binary",
                "./target/riscv64gc-unknown-none-elf/debug/user_1.bin"
            ]
        },
        {
            "label": "Build user_2",
            "type": "shell",
            "command": "cargo",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "args": [
                "objcopy",
                "--bin",
                "user_2",
                "--",
                "-O",
                "binary",
                "./target/riscv64gc-unknown-none-elf/debug/user_2.bin"
            ]
        },
        {
            "label": "Build user binaries",
            "dependsOn": [
                "Build user_1",
                "Build user_2",
            ],
            "problemMatcher": [
                "$rustc"
            ]
        },
        {
            "label": "Build",
            "type": "cargo",
            "command": "build",
            "problemMatcher": [
                "$rustc"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Terminate All",
            "command": "echo ${input:terminate}",
            "type": "shell"
        }
    ],
    "inputs": [
        {
            "id": "terminate",
            "type": "command",
            "command": "workbench.action.tasks.terminate",
            "args": "terminateAll"
        }
    ]
}